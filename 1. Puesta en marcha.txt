-------------------------------------------------------------------------------
1. Descargamos PostgreSQL
-------------------------------------------------------------------------------

docker pull postgres:12

Para el taller podríamos haber empleado una versión Alpine (mucho más ligera).

docker pull postgres:12-alpine

-------------------------------------------------------------------------------
2. Ejecutamos contenedor PostgreSQL 12 con nombre PostgreSQL y puerto 5432
-------------------------------------------------------------------------------

docker run -d --name PostgreSQL -p 5432:5432 -e POSTGRES_PASSWORD=admin --restart=always postgres:12

Indicamos:

 -d > Segundo plano
 --name PostgreSQL > Nombre que queremos que tenga el contenedor
 -p 5432:5432 > Puerto al que conectarnos mapeado con el puerto expuesto
 -e POSTGRES_PASSWORD=admin > Contraseña de la BBDD a partir de una variable de entorno
 postgres:12 > Nombre la imagen que empleamos

-------------------------------------------------------------------------------
3. Descargamos y ejecutamos el contenedor de pgAdmin sobre el puerto 2345
-------------------------------------------------------------------------------

docker run -d --name pgAdmin4 -p 2345:80 -e 'PGADMIN_DEFAULT_EMAIL=lm.martin@preving.com' -e 'PGADMIN_DEFAULT_PASSWORD=admin' dpage/pgadmin4

-------------------------------------------------------------------------------
4. Configuramos la conexión de pgAdmin a PostgreSQL
-------------------------------------------------------------------------------

pgAdmin Dockerizado:
====================

HOST host.docker.internal
PORT 5432
USER postgres
PASS admin

pgAdmin o dBeaver:
==================

HOST localhost (o IP)
PORT 5432
USER postgres
PASS admin

-------------------------------------------------------------------------------
5. Lanzamos la API/Backend de Spring
-------------------------------------------------------------------------------

Ejecutamos desde IntelliJ la aplicación: se conectará a la base datos configurada y creará el modelo de datos en el primer arranque.

-------------------------------------------------------------------------------
6. Ejecutamos el front Angular
-------------------------------------------------------------------------------

ng serve

Ahora sobre http://localhost:4200 accedemos al Frontend y comprobamos que todo funciona correctamente.